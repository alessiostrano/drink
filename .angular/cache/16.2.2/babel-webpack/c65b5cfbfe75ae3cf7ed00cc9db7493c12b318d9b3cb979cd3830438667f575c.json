{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet Dettaglio = class Dettaglio {\n  sanitizeIngredientName(name) {\n    // Utilizza una espressione regolare per rimuovere gli spazi\n    return name.replace(/\\s/g, '');\n  }\n  constructor(route, apiService) {\n    this.route = route;\n    this.apiService = apiService;\n    this.ingredients = []; // Dichiara un array per memorizzare gli ingredienti\n    this.foto = [];\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n      this.apiService.getDati(this.id).subscribe(data => {\n        this.dati = data;\n        console.log(this.dati);\n        for (let i = 1; i <= 15; i++) {\n          const ingredientKey = `strIngredient${i}`;\n          if (this.dati.drinks[0][ingredientKey]) {\n            const ingredientName = this.dati.drinks[0][ingredientKey];\n            // Rimuovi gli spazi dal percorso dell'immagine\n            const sanitizedPath = `https://www.thecocktaildb.com/images/ingredients/${ingredientName.replace(/\\s/g, '-')}.png`;\n            this.ingredients.push(ingredientName);\n            this.foto.push(sanitizedPath);\n          }\n        }\n        console.log(this.foto);\n        console.log(this.ingredients);\n      });\n    });\n  }\n};\nDettaglio = __decorate([Component({\n  selector: 'dettaglio',\n  templateUrl: './dettaglio.component.html',\n  styleUrls: ['./dettaglio.component.css']\n})], Dettaglio);\nexport { Dettaglio };\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at https://angular.io/license\n*/","map":{"version":3,"names":["Component","Dettaglio","sanitizeIngredientName","name","replace","constructor","route","apiService","ingredients","foto","ngOnInit","paramMap","subscribe","params","id","get","getDati","data","dati","console","log","i","ingredientKey","drinks","ingredientName","sanitizedPath","push","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/alessiostrano/Documents/angular/drink/src/app/dettaglio/dettaglio.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ApiDetails } from '../apiDetails';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'dettaglio',\r\n  templateUrl: './dettaglio.component.html',\r\n  styleUrls: ['./dettaglio.component.css']\r\n})\r\n\r\nexport class Dettaglio implements OnInit {\r\nid:any;\r\ndati: any;\r\n\r\ningredients: string[] = []; // Dichiara un array per memorizzare gli ingredienti\r\n\r\nfoto:string[]=[]\r\n\r\nsanitizeIngredientName(name: string): string {\r\n  // Utilizza una espressione regolare per rimuovere gli spazi\r\n  return name.replace(/\\s/g, '');\r\n}\r\n\r\n\r\nconstructor(private route: ActivatedRoute,private apiService: ApiDetails) {}\r\nngOnInit() {\r\n  this.route.paramMap.subscribe((params) => {\r\n    this.id = params.get('id');\r\n    this.apiService.getDati(this.id).subscribe((data) => {\r\n      this.dati = data;\r\n      console.log(this.dati);\r\n      \r\n      \r\n      for (let i = 1; i <= 15; i++) {\r\n        const ingredientKey = `strIngredient${i}`;\r\n        if (this.dati.drinks[0][ingredientKey]) {\r\n          const ingredientName = this.dati.drinks[0][ingredientKey];\r\n          \r\n          // Rimuovi gli spazi dal percorso dell'immagine\r\n          const sanitizedPath = `https://www.thecocktaildb.com/images/ingredients/${ingredientName.replace(/\\s/g, '-')}.png`;\r\n          \r\n          this.ingredients.push(ingredientName);\r\n          this.foto.push(sanitizedPath);\r\n        }\r\n      }\r\n      \r\n      \r\n      console.log(this.foto)\r\n      console.log(this.ingredients);\r\n      \r\n      \r\n    });\r\n  });\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,SAAS,GAAf,MAAMA,SAAS;EAQtBC,sBAAsBA,CAACC,IAAY;IACjC;IACA,OAAOA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAChC;EAGAC,YAAoBC,KAAqB,EAASC,UAAsB;IAApD,KAAAD,KAAK,GAALA,KAAK;IAAyB,KAAAC,UAAU,GAAVA,UAAU;IAV5D,KAAAC,WAAW,GAAa,EAAE,CAAC,CAAC;IAE5B,KAAAC,IAAI,GAAU,EAAE;EAQ2D;EAC3EC,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,SAAS,CAAEC,MAAM,IAAI;MACvC,IAAI,CAACC,EAAE,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;MAC1B,IAAI,CAACR,UAAU,CAACS,OAAO,CAAC,IAAI,CAACF,EAAE,CAAC,CAACF,SAAS,CAAEK,IAAI,IAAI;QAClD,IAAI,CAACC,IAAI,GAAGD,IAAI;QAChBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,IAAI,CAAC;QAGtB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC5B,MAAMC,aAAa,GAAG,gBAAgBD,CAAC,EAAE;UACzC,IAAI,IAAI,CAACH,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAACD,aAAa,CAAC,EAAE;YACtC,MAAME,cAAc,GAAG,IAAI,CAACN,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAACD,aAAa,CAAC;YAEzD;YACA,MAAMG,aAAa,GAAG,oDAAoDD,cAAc,CAACpB,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM;YAElH,IAAI,CAACI,WAAW,CAACkB,IAAI,CAACF,cAAc,CAAC;YACrC,IAAI,CAACf,IAAI,CAACiB,IAAI,CAACD,aAAa,CAAC;;;QAKjCN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,IAAI,CAAC;QACtBU,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,WAAW,CAAC;MAG/B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;CAMC;AAjDYP,SAAS,GAAA0B,UAAA,EANrB3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EAEW7B,SAAS,CAiDrB;SAjDYA,SAAS;AAqDtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}